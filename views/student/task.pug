extends ../includes/layout
mixin fileIcon(file)
    div.col-6.col-md-4.col-lg-2.mb-4.replyFileIcon(data-filereply=file.reply, data-fileid=file.id)
        p
            if file.fileExt === 'cpp' || file.fileExt === 'h' || file.fileExt === 'c'
                i.fa.fa-file-code-o.fa-3x
            else if file.fileExt === 'bmp' || file.fileExt === 'png' || file.fileExt === 'jpg'
                i.fa.fa-file-image-o.fa-3x
            else if file.fileExt === 'txt'
                i.fa.fa-file-text-o.fa-3x
            else
                i.fa.fa-file-o.fa-3x
        code=file.fileName + '.' + file.fileExt
mixin noFilesInReply
    .col-12.mb-2.text-center.text-muted
        i.fa.fa-files-o.fa-4x
    .col-12.text-center.text-muted=i18n('student.task.files.nofiles')
mixin commentBlock(com, hidden)
    .list-group-item.list-group-item-action.flex-column.align-items-start(style=(hidden ? 'display: none;': ''))
        .d-flex.w-100.justify-content-between
            h5.mb-1
                if com.user
                    strong.task-c-author=(com.user ? com.user.fullName() : '')
                    if com.user.isTeacher
                        span.badge.badge-primary.ml-2=i18n('student.task.teacher')
                    span.ml-2=i18n('student.task.wrote')
                else
                    strong.task-c-author
                        span.badge.badge-info=i18n('student.task.sysmsg')
            small.text-muted.task-c-timestamp=com.createdAt
        p.mb-1.task-c-comment=com.comment
        if !com.viewed
            div.text-right.w-100
                small.text-muted.task-c-read
                    span.fa-stack.fa-lg
                        i.fa.fa-circle-thin.fa-stack-2x
        else
            div.text-right.w-100
                small.text-muted.task-c-read
                    span.fa-stack.fa-lg.text-primary
                        i.fa.fa-circle.fa-stack-2x
                        i.fa.fa-check.fa-inverse.fa-stack-1x
            //=i18n('student.task.read')
block content
    style.
        .custom-task-file-control::before {
            content: "#[=i18n('student.task.file.browse')]";
        }
        .custom-task-file-control::after {
            content: "#[=i18n('student.task.file.choose')]";
        }
    if req.query.msg === 'fileUpdateSuccess' || req.query.msg === 'replySent' || req.query.msg === 'fileUploadSuccess'
        .alert.alert-success
            case req.query.msg
                when 'fileUpdateSuccess'
                    span=i18n('student.task.files.updatesuccess')
                when 'replySent'
                    span=i18n('student.task.reply.sent')
                when 'fileUploadSuccess'
                    span=i18n('student.task.files.uploadsuccess')
        script.
          window.history.replaceState('', '', location.pathname)
    else if req.query.msg
        .alert.alert-danger
            case req.query.msg
                when 'cantUploadReplaySent'
                    span=i18n('student.task.files.replyalreadysent')
                when 'fileTooBig'
                    span=i18n('student.task.files.toobig')
                when 'extNotAllowed'
                    span=i18n('student.task.files.extnotallowed')
                when 'noFilesInReply'
                    span=i18n('student.task.reply.nofiles')
                when 'replyAlreadySent'
                    span=i18n('student.task.reply.replyalreadysent')
                when 'noMainFile'
                    span=i18n('student.task.reply.nomainfile')
                default
                    span=i18n('error')
        script.
          window.history.replaceState('', '', location.pathname)

    #fileContentModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='fileContentModalTitle', aria-hidden='true')
        .modal-dialog.modal-lg(role='document')
            .modal-content
                .modal-header
                    h5#fileContentModalTitle.modal-title=i18n('student.task.modal.loading')
                    button.close(type='button', data-dismiss='modal', aria-label=i18n('student.task.modal.close'))
                        span(aria-hidden='true') ×
                #fileContentModalBody.modal-body=i18n('student.task.modal.loading')
                .modal-footer.flex-wrap.align-content-around
                    button#fileContentModalReplace.btn.btn-success=i18n('student.task.modal.replace')
                    a#fileContentModalDownload.btn.btn-warning=i18n('student.task.modal.download')
                    button#fileContentModalRemove.btn.btn-danger=i18n('student.task.modal.remove')
                    button.btn.btn-primary(data-dismiss='modal')=i18n('student.task.modal.close')
    script#tmplRemoveModal(type='text/x-jsrender')
        #removeModal.removeModal.modal.fade
            .modal-dialog(role='document')
                .modal-content
                    .modal-header
                        h5.modal-title=i18n('student.task.modal.remove.title')
                        button.close(type='button', data-dismiss='modal', aria-label=i18n('student.task.modal.cancel'))
                            span(aria-hidden='true') ×
                    .modal-body=i18n('student.task.modal.remove.body.%s', '{{:name}}')
                    .modal-footer
                        button.btn.btn-danger.fileRemoveButton(type='button', data-removereply='{{:reply}}', data-removeid='{{:id}}')=i18n('student.task.modal.remove')
                        button.btn.btn-secondary(type='button', data-dismiss='modal')=i18n('student.task.modal.cancel')
    script#tmplReplaceModal(type='text/x-jsrender')
        #replaceModal.replaceModal.modal.fade
            .modal-dialog(role='document')
                form.modal-content(action='/reply/{{:reply}}/updateFile/{{:id}}', enctype='multipart/form-data', method='post')
                    .modal-header
                        h5.modal-title=i18n('student.task.modal.replace.title.%s', '{{:name}}')
                        button.close(type='button', data-dismiss='modal', aria-label=i18n('student.task.modal.cancel'))
                            span(aria-hidden='true') ×
                    .modal-body
                        input(type='file', name='file', accept='.{{:ext}}')

                    .modal-footer
                        input.btn.btn-primary.btn-success(type='submit', value=i18n('student.task.modal.replace'))
                        button.btn.btn-secondary(type='button', data-dismiss='modal')=i18n('student.task.modal.cancel')
    script#tmplSendReplyModal(type='text/x-jsrender')
        #sendReplyModal.modal.fade
            .modal-dialog(role='document')
                .modal-content
                    .modal-header
                        h5#sendReplyModalTitle.modal-title=i18n('student.task.modal.sendreply.title')
                        button.close(type='button', data-dismiss='modal', aria-label=i18n('student.task.modal.cancel'))
                            span(aria-hidden='true') ×
                    #sendReplyModalBody.modal-body=i18n('student.task.modal.sendreply.body')
                        br
                        b=i18n('student.task.modal.sendreply.body.bold')
                    .modal-footer

                        a(href='/topic/{{:topic}}/task/{{:task}}/sendReply').btn.btn-primary=i18n('student.task.modal.sendreply.button')
                        button.btn.btn-secondary(type='button', data-dismiss='modal')=i18n('student.task.modal.cancel')
    script#tmplCommentAjax(type='text/x-jsrender')
        .list-group-item.list-group-item-action.flex-column.align-items-start#commentFadeIn(style='display: none;')
            .d-flex.w-100.justify-content-between
                h5.mb-1
                    | {{if user}}
                    strong.task-c-author
                        span.task-c-author-studentname {{:name}}
                        | {{if teacher}}
                        span.badge.badge-primary.ml-2=i18n('student.task.teacher')
                        | {{/if}}
                        span.ml-2=i18n('student.task.wrote')
                    | {{else}}
                    strong.task-c-author
                            span.badge.badge-info=i18n('student.task.sysmsg')
                    | {{/if}}
                small.text-muted.task-c-timestamp {{:timestamp}}
            p.mb-1.task-c-comment {{:comment}}
            div.text-right.w-100
                small.text-muted.task-c-read
                    span.fa-stack.fa-lg.text-warning
                        i.fa.fa-circle-thin.fa-stack-2x
                        i.fa.fa-spinner.fa-spin.fa-stack-1x


    .card
        .card-header
            ul.nav.nav-tabs.nav-fill.task-tab
                li.nav-item
                    a.nav-link(class=(req.query.msg ? '' : 'active'), data-toggle='tab', href='#task', aria-expanded=(req.query.msg ? 'false' : 'true'))=i18n('student.task.tab.task')
                li.nav-item
                    a.nav-link(class=(req.query.msg ? 'active' : ''), data-toggle='tab', href='#files', aria-expanded=(req.query.msg ? 'true' : 'false'))=i18n('student.task.tab.files')
                li.nav-item
                    a.nav-link(data-toggle='tab', href='#comments', aria-expanded='false')=i18n('student.task.tab.comments')
                        if taskComments && taskComments.length > 0
                            span.badge.badge-pill.badge-primary.commentsNotViewed= taskComments.filter(function (c) { return c.viewed === false }).length

        .card-block
            #myTabContent.tab-content
                #task.tab-pane.fade(class=(req.query.msg ? '' : 'in active show'), aria-expanded=(req.query.msg ? 'false' : 'true'))
                    //-h1 Topic: #{topic.id}
                    - let teacherStatus = [i18n('student.task.ts.none'), i18n('student.task.ts.pass'), i18n('student.task.ts.fail')]
                    - let machineStatus = [i18n('student.task.ms.notstarted'), i18n('student.task.ms.inqueue'), i18n('student.task.ms.super'), i18n('student.task.ms.note'), i18n('student.task.ms.notices'), i18n('student.task.ms.errors')]
                    - let machineFix = [i18n('student.task.ts.fail'), i18n('student.task.ts.pass')]
                    h3=i18n('student.task.task')
                        span #{topic.number}. #{task.number}. #{task.title}
                    h5=i18n('student.task.deadline.%s', deadline)
                    if taskReply && taskReply.sent
                        div.text-right
                            if !taskReply.lastSent
                                h5=i18n('student.task.lastsent.a')
                            h6=i18n('student.task.ts.status.%s', teacherStatus[taskReply.teacherStatus])
                            h6=i18n('student.task.ms.status.%s', machineStatus[taskReply.machineStatus])
                                if ![0,1].includes(taskReply.machineStatus)
                                    | &nbsp;/&nbsp;
                                    =machineFix[taskReply.machineOk]
                            if taskReply.machineMessage
                                h6=i18n('student.task.ms.machinemessage.%s', taskReply.machineMessage)
                            if taskReply.machineReport
                                h6=i18n('student.task.ms.machinereport')
                                    a(href='http://'+taskReply.machineReport)=taskReply.machineReport
                            if !taskReply.lastSent
                                h6=i18n('student.task.lastsent.b')
                            if taskReply.blocked
                                h6=i18n('student.task.blocked')
                    h5=i18n('student.task.description')
                    .card
                        #task-content.card-block!= task.description

                #files.tab-pane.fade(class=(req.query.msg ? 'in active show' : ''),aria-expanded=(req.query.msg ? 'true' : 'false'))
                        .card.text-center
                            if taskReply
                                .card-header
                                    | A: #{taskReply.student} B: #{taskReply.task}
                                    | C: #{taskReply.teacherStatus} D: #{taskReply.machineStatus}
                                .card-block
                                    .row
                                        if taskReplyFiles[0]
                                            each file in taskReplyFiles
                                                +fileIcon(file)
                                        else
                                            +noFilesInReply
                            else
                                .card-block
                                    .row
                                        +noFilesInReply
                            if (taskReply && !taskReply.lastSent && !taskReply.blocked) || !taskReply
                                .card-footer.text-muted
                                    if deadlineCanSend
                                        form(action='/topic/' + topic.id + '/task/' + task.id + '/uploadFile/', enctype='multipart/form-data', method='post')
                                            label.custom-task-file
                                                input#file.custom-task-file-input(type='file', name='files', accept='.c,.cpp,.h,.hpp,.inc,.txt,.bmp,.png', multiple)
                                                span.custom-task-file-control(lang=req.i18n.locale)
                                            | &nbsp;
                                            input.btn.btn-primary(type='submit', value=i18n('student.task.files.send'))
                                            // TODO: Seba dodaj walidacje wielkości każdego pliku przez javascripta
                                            small.form-text.text-muted=i18n('student.task.files.reqs')
                                        if taskReplyFiles && taskReplyFiles.length > 0
                                            hr.taskReplyConfirm
                                            button#sendReply.btn.btn-success(data-topic=topic.id, data-task=task.id)=i18n('student.task.files.confirm')
                                    else
                                        small.form-text.text-muted=i18n('student.task.files.afterdeadline')

                #comments.tab-pane.fade(aria-expanded='false')
                    .list-group.mb-3#commentArea(style='max-height:500px;overflow-y:auto;')
                        - var allviewed = true
                        - var lastid = 1
                        - var i = 1
                        each com in taskComments
                            +commentBlock(com)
                            if i === taskComments.length
                                - lastid = com.id
                                //- console.log(lastid)
                            if !com.viewed
                                - allviewed = false
                            - i++
                        button.list-group-item.list-group-item-action.active.task-comment-markread.justify-content-center#commentMarkAsRead(style=(allviewed ? 'display: none;' : ''))=i18n('student.task.comment.markasread')
                    .input-group
                        // TODO: dodać spinnera w trakcie wysyłania komentarza, obsłużyć dodanie poprawne i błąd dodawania i wyświetlić że się nie dodało, dodać blokadę przycisku aby nie spamować w trakcie wysyłania
                        textarea.form-control.task-comment-textarea#commentTextArea(type='text', placeholder=i18n('student.task.comment'), name='comment', rows='1')
                        span.input-group-btn
                            button.btn.btn-primary#commentSendButton(type='button')=i18n('student.task.comment.send')

                    //-.form-group.mb-0
                        textarea#exampleTextarea.form-control(rows='1', placeholder='Komentarz')


                    //-.card
                        button(onclick='markAsRead(' + top + ',' + tas + ',' + tasRep + ')')
                            | elo
                        div#allComments

                            h1 User add:
                            h1 comment:
                            p createdAt:


                        textarea#theComment(name='comment')
                        button(onclick='sendComment(' + top + ',' + tas + ',' + tasRep + ')') send
                    script.
                      var tData = {
                          'top': #{topic.id},
                          'tas': #{task.id}
                      }

    script.
        var task = #{task.id},
          lastComment = #{lastid},
          replySent = #{(taskReply? taskReply.lastSent : false)}
